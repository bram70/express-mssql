<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>mvc/View</name>
    <derived/>
    <documentation>A base class for Views.

Introduces the relationship to a Controller, some basic visual appearance settings like width and height
and provides lifecycle events.</documentation>
    <baseType>sap.ui.core/Control</baseType>
    <properties>
        <property group="Dimension" defaultValue="100%" type="sap.ui.core/CSSSize" name="width">
            <documentation>The width</documentation>
        </property>
        <property group="Dimension" type="sap.ui.core/CSSSize" name="height">
            <documentation>The height</documentation>
        </property>
        <property group="Misc" type="sap.ui.core/string" name="viewName">
            <documentation>Name of the View</documentation>
        </property>
        <property group="Appearance" defaultValue="false" type="sap.ui.core/boolean" name="displayBlock">
            <documentation>Whether the CSS display should be set to &quot;block&quot;.
Set this to &quot;true&quot; if the default display &quot;inline-block&quot; causes a vertical scrollbar with Views that are set to 100% height.
Do not set this to &quot;true&quot; if you want to display other content in the same HTML parent on either side of the View (setting to &quot;true&quot; may push that other content to the next/previous line).</documentation>
        </property>
    </properties>
    <events>
        <event allowPreventDefault="false" name="afterInit">
            <documentation>Fired when the View has parsed the UI description and instantiated the contained controls (/control tree).</documentation>
        </event>
        <event allowPreventDefault="false" name="beforeExit">
            <documentation>Fired when the view has received the request to destroy itself, but before it has destroyed anything.</documentation>
        </event>
        <event allowPreventDefault="false" name="afterRendering">
            <documentation>Fired when the View has been (re-)rendered and its HTML is present in the DOM.</documentation>
        </event>
        <event allowPreventDefault="false" name="beforeRendering">
            <documentation>Fired before this View is re-rendered. Use to unbind event handlers from HTML elements etc.</documentation>
        </event>
    </events>
    <aggregations>
        <aggregation cardinality="0..n" type="sap.ui.core/Control" name="content">
            <documentation>Child Controls of the view</documentation>
        </aggregation>
    </aggregations>
    <methods>
        <method type="sap.ui.core/object" name="getController">
            <documentation>Returns the view's Controller instance or null for a controller-less View.</documentation>
        </method>
    </methods>
</control>
