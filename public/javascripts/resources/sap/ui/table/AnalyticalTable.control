<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd">
    <name>AnalyticalTable</name>
    <derived/>
    <documentation>Table which handles analytical OData backends. The AnalyticalTable only works with an AnalyticalBinding and
correctly annotated OData services. Please check on the SAP Annotations for OData Version 2.0 documentation for further details.</documentation>
    <baseType>sap.ui.table/Table</baseType>
    <properties>
        <property group="Appearance" defaultValue="false" type="sap.ui.core/boolean" name="sumOnTop">
            <documentation>Specifies if the total values should be displayed in the group headers or on bottom of the row. Does not affact the total sum.</documentation>
        </property>
        <property group="Misc" defaultValue="0" type="sap.ui.core/int" name="numberOfExpandedLevels">
            <documentation>Number of levels, which should be opened initially (on first load of data).</documentation>
        </property>
        <property group="Misc" defaultValue="Bundled" type="sap.ui.core/string" name="autoExpandMode">
            <documentation>The kind of auto expansion algorithm, e.g. optimised filter conditions, per level requests, ...
sap.ui.table.TreeAutoExpandMode</documentation>
        </property>
        <property group="Appearance" type="sap.ui.core/any" name="columnVisibilityMenuSorter">
            <documentation>Functions which is used to sort the column visibility menu entries e.g.: function(ColumnA, ColumnB) { return 0 = equals, &lt;0 lower, &gt;0 greater }; Other values than functions will be ignored.</documentation>
        </property>
        <property defaultValue="true" type="sap.ui.core/boolean" name="collapseRecursive">
            <documentation>Setting collapseRecursive to true means, that when collapsing a node all subsequent child nodes will also be collapsed.</documentation>
        </property>
        <property group="Appearance" type="sap.ui.core/boolean" name="dirty">
            <documentation>If dirty the content of the Table will be overlayed.</documentation>
            <deprecation since="1.21.2">Please use setShowOverlay instead.</deprecation>
        </property>
    </properties>
    <methods>
        <method type="sap.ui.table/TreeTable" name="collapseAll">
            <documentation>Collapses all nodes (and lower if collapseRecursive is activated)</documentation>
        </method>
        <method type="sap.ui.core/object" name="getContextByIndex">
            <documentation>Returns the context of a row by its index.</documentation>
            <parameters>
                <parameter type="sap.ui.core/int" name="index">
                    <documentation>Index of the row to return the context from.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.core/int" name="getTotalSize">
            <documentation>Returns the total size of the data entries.</documentation>
        </method>
        <method type="sap.ui.core/boolean" name="isIndexSelected">
            <documentation>Checks if the row at the given index is selected.</documentation>
            <parameters>
                <parameter type="sap.ui.core/int" name="rowIndex">
                    <documentation>The row index for which the selection state should be retrieved</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.table/TreeTable" name="setSelectedIndex">
            <documentation>Overriden from Table.js base class.
In a TreeTable you can only select indices, which correspond to the currently visualized tree.
Invisible tree nodes (e.g. collapsed child nodes) can not be selected via Index, because they do not
correspond to a TreeTable row.</documentation>
            <parameters>
                <parameter type="sap.ui.core/int" name="rowIndex">
                    <documentation>The row index which will be selected (if existing)</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.core/int[]" name="getSelectedIndices">
            <documentation>Returns an array containing the row indices of all selected tree nodes (ordered ascending).

Please be aware of the following:
Due to performance/network traffic reasons, the getSelectedIndices function returns only all indices
of actually selected rows/tree nodes. Unknown rows/nodes (as in &quot;not yet loaded&quot; to the client), will not be
returned.</documentation>
        </method>
        <method type="sap.ui.table/TreeTable" name="setSelectionInterval">
            <documentation>Sets the selection of the TreeTable to the given range (including boundaries).
Beware: The previous selection will be lost/overriden. If this is not wanted, please use &quot;addSelectionInterval&quot; and
&quot;removeSelectionIntervall&quot;.</documentation>
            <parameters>
                <parameter type="sap.ui.core/int" name="fromIndex">
                    <documentation>the start index of the selection range</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="toIndex">
                    <documentation>the end index of the selection range</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.table/TreeTable" name="addSelectionInterval">
            <documentation>Marks a range of tree nodes as selected, starting with iFromIndex going to iToIndex.
The TreeNodes are referenced via their absolute row index.
Please be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.
Invisible nodes (collapsed child nodes) will not be regarded.

Please also take notice of the fact, that &quot;addSelectionInterval&quot; does not change any other selection.
To override the current selection, please use &quot;setSelctionInterval&quot; or for a single entry use &quot;setSelectedIndex&quot;.</documentation>
            <parameters>
                <parameter type="sap.ui.core/int" name="fromIndex">
                    <documentation>The starting index of the range which will be selected.</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="toIndex">
                    <documentation>The starting index of the range which will be selected.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.table/TreeTable" name="removeSelectionInterval">
            <documentation>All rows/tree nodes inside the range (including boundaries) will be deselected.
Tree nodes are referenced with theit absolute row index inside the tree-
Please be aware, that the absolute row index only applies to the the tree which is visualized by the TreeTable.
Invisible nodes (collapsed child nodes) will not be regarded.</documentation>
            <parameters>
                <parameter type="sap.ui.core/int" name="fromIndex">
                    <documentation>The starting index of the range which will be deselected.</documentation>
                </parameter>
                <parameter type="sap.ui.core/int" name="toIndex">
                    <documentation>The starting index of the range which will be deselected.</documentation>
                </parameter>
            </parameters>
        </method>
        <method type="sap.ui.table/TreeTable" name="selectAll">
            <documentation>Selects all available nodes/rows.

Explanation of the SelectAll function and what to expect from its behavior:
All rows/tree nodes locally stored on the client are selected.
In addition all subsequent rows/tree nodes, which will be paged into view are also immediatly selected.
However, due to obvious performance/network traffic reasons, the SelectAll function will NOT retrieve any data from the backend.</documentation>
        </method>
        <method type="sap.ui.core/int[]" name="getSelectedIndex">
            <documentation>Retrieves the lead selection index. The lead selection index is, among other things, used to determine the
start/end of a selection range, when using Shift-Click to select multiple entries at once.</documentation>
        </method>
        <method type="sap.ui.table/TreeTable" name="clearSelection">
            <documentation>Clears the complete selection (all tree table rows/nodes will lose their selection)</documentation>
        </method>
    </methods>
</control>
